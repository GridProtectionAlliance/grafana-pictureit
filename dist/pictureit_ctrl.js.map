{"version":3,"sources":["../src/pictureit_ctrl.js"],"names":["_","MetricsPanelCtrl","kbn","panelDefaults","valueMaps","seriesList","series","bgimage","sensors","height","width","PictureItCtrl","$scope","$injector","defaults","panel","unitFormats","getUnitFormats","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","name","target","value","datapoints","index","splice","xlocation","ylocation","format","decimals","bgcolor","color","size","bordercolor","visible","lastSensor","subItem","addEditorTab","scope","elem","attrs","ctrl","$panelContainer","find","pixelStrToNum","str","parseInt","substr","css","sensorsLength","valueMapsLength","sensor","ylocationStr","toString","xlocationStr","sizeStr","valueMap","valueFormatted","valueFormats","renderingCompleted","templateUrl"],"mappings":"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","file":"pictureit_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport './sprintf.js';\nimport './angular-sprintf.js';\nimport kbn from 'app/core/utils/kbn';\n\nconst panelDefaults = {\n\tvalueMaps: [],\n\tseriesList: [],\n\tseries: [],\n\tbgimage: '',\n\tsensors: [],\n\theight: '400px',\n\twidth: '100px'\n};\n\nexport class PictureItCtrl extends MetricsPanelCtrl  {\n  \n  \n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n\n    this.unitFormats = kbn.getUnitFormats();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n  }\n\n  onDataReceived(dataList) {\t\n\tvar dataListLength = dataList.length;\n\tthis.panel.valueMaps=[];\n\tfor (var series=0;series<dataListLength;series++) {\t\t\n\t\tthis.panel.valueMaps.push({name:dataList[series].target,value:dataList[series].datapoints[dataList[series].datapoints.length-1][0]});\n\t}\n\t\n    this.render();\n  }\n  \n  deleteSensor(index) {\n\tthis.panel.sensors.splice(index,1);\n  }\n  \n  addSensor() {\n\tif (this.panel.sensors.length==0)\n\t\tthis.panel.sensors.push({name: 'A-series', xlocation: 200,ylocation: 200,format: 'none', decimals: 'auto',bgcolor:'rgba(0, 0, 0, 0.58)',color:'#FFFFFF',size:22, bordercolor:'rgb(251, 4, 4)',visible:true});\n\telse {\n\t\tvar lastSensor=this.panel.sensors[this.panel.sensors.length-1];\n\t\n\t\tthis.panel.sensors.push({name: lastSensor.name, xlocation: 200,ylocation: 200,format: lastSensor.format, decimals: lastSensor.decimals,bgcolor:lastSensor.bgcolor,color:lastSensor.color,size:lastSensor.size, bordercolor:lastSensor.bordercolor,visible:true});\n\t}\n  }\n  \n  setUnitFormat(subItem, index) {\n  \tthis.panel.sensors[index].format = subItem.value;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/bessler-pictureit-panel/editor.html', 2);\n  }\n\t\n  link(scope, elem, attrs, ctrl) {\n    var sensors;\n    var valueMaps;\n\n    const $panelContainer = elem.find('.panel-container');\n\n    function pixelStrToNum(str) {\n        return parseInt(str.substr(0,str.length-2));\n    }\n\t\n    function render() {\n        if (!ctrl.panel.sensors) { return; }\n\t\n        var width = pixelStrToNum($panelContainer.css(\"width\"));\n        var height = pixelStrToNum($panelContainer.css(\"height\"));\n\t  \n        sensors = ctrl.panel.sensors;\t  \n\tvalueMaps = ctrl.panel.valueMaps;\n\t  \n\tvar sensorsLength = sensors.length;\n\tvar valueMapsLength = valueMaps.length;\n\t  \n\tfor (var sensor=0;sensor<sensorsLength;sensor++) {\n            sensors[sensor].visible = sensors[sensor].xlocation<width && sensors[sensor].ylocation<height;\n            sensors[sensor].ylocationStr=sensors[sensor].ylocation.toString()+\"px\";\n            sensors[sensor].xlocationStr=sensors[sensor].xlocation.toString()+\"px\";\n            sensors[sensor].sizeStr=sensors[sensor].size.toString()+\"px\";\n            for (var valueMap=0;valueMap<valueMapsLength;valueMap++) {\t\n                if (sensors[sensor].name==valueMaps[valueMap].name) {\n                    sensors[sensor].valueFormatted = kbn.valueFormats[sensors[sensor].format](valueMaps[valueMap].value,sensors[sensor].decimals, null);\n\t\tbreak;\n\t\t}\n            }\n\t}\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nPictureItCtrl.templateUrl = 'module.html';\n"]}